resource "local_file" "inventory" {
  content = <<-DOC
# Ansible inventory containing variable values from Terraform.
# Generated by Terraform.
# ## Configure 'ip' variable to bind kubernetes services on a
# ## different ip than the default iface
# ## We should set etcd_member_name for etcd cluster. The node that is not a etcd member do not need to set the value, or can set the empty string value.
[all]
node1 ansible_host=${yandex_compute_instance.worker[0].network_interface.0.nat_ip_address} ip=${yandex_compute_instance.worker[0].network_interface.0.ip_address}
node2 ansible_host=${yandex_compute_instance.worker[1].network_interface.0.nat_ip_address} ip=${yandex_compute_instance.worker[1].network_interface.0.ip_address}
cp1 ansible_host=${yandex_compute_instance.master[0].network_interface.0.nat_ip_address} etcd_member_name=etcd1 ip=${yandex_compute_instance.master[0].network_interface.0.ip_address}

[all:vars]
ansible_user=ubuntu

# ## configure a bastion host if your nodes are not directly reachable
# [bastion]
# bastion ansible_host=x.x.x.x ansible_user=some_user

[kube_control_plane]
cp1
#cp2
#cp3

[etcd]
cp1
#cp2
#cp3

[kube_node]
#node3
node1
node2

[calico_rr]

[k8s_cluster:children]
kube_master
kube_node
calico_rr

DOC
  filename = "../kubespray/inventory/mycluster/hosts.ini"

  depends_on = [
    yandex_compute_instance.master,
    yandex_compute_instance.worker, 
  ]

  prevent_destroy = true

}
